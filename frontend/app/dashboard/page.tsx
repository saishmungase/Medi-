"use client"

import { useState, useEffect } from "react"
import { useSearchParams } from "next/navigation"
import Link from "next/link"
import { ArrowLeft, Pill, AlertTriangle, Info, Clock, Activity, Shield, FileText, Sparkles, X } from "lucide-react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"

interface Medicine {
  name: string
  purpose: string
  indications: string
  dosage: string
  warnings: string
  side_effects: string[]
  interactions: string[]
  risk_level: "Low" | "Medium" | "High"
}

export default function DashboardPage() {
  const [medicines, setMedicines] = useState<Medicine[]>([])
  const [isLoading, setIsLoading] = useState(true)
  const [showAISummary, setShowAISummary] = useState(false)
  const [aiSummary, setAiSummary] = useState("")
  const [isGeneratingSummary, setIsGeneratingSummary] = useState(false)
  const searchParams = useSearchParams()

  const generateAISummary = async () => {
    setIsGeneratingSummary(true)

    // Simulate AI processing
    await new Promise((resolve) => setTimeout(resolve, 2000))

    const summary = `
**AI-Generated Medical Summary**

Based on the analysis of your prescription, here are the key findings:

**Prescribed Medications:** ${medicines.map((m) => m.name).join(", ")}

**Overall Risk Assessment:** The combination of prescribed medications shows a ${medicines.some((m) => m.risk_level === "High") ? "HIGH" : medicines.some((m) => m.risk_level === "Medium") ? "MEDIUM" : "LOW"} risk profile.

**Key Recommendations:**
• Follow prescribed dosages strictly
• Monitor for side effects: ${medicines
      .flatMap((m) => m.side_effects)
      .slice(0, 3)
      .join(", ")}
• Be aware of drug interactions, especially with alcohol and other medications
• Complete the full course of antibiotics if prescribed

**Important Warnings:**
${medicines.map((m) => `• ${m.name}: ${m.warnings}`).join("\n")}

**Next Steps:**
• Consult your healthcare provider if you experience any unusual symptoms
• Keep a medication diary to track effectiveness and side effects
• Schedule follow-up appointments as recommended

*This summary is generated by AI and should not replace professional medical advice.*
  `

    setAiSummary(summary)
    setIsGeneratingSummary(false)
    setShowAISummary(true)
  }

  useEffect(() => {
    const medsParam = searchParams.get("meds")
    if (medsParam) {
      const medNames = medsParam.split(",")

      // Mock data for demonstration
      const mockMedicines: Medicine[] = medNames.map((name, index) => ({
        name: name.charAt(0).toUpperCase() + name.slice(1),
        purpose: index === 0 ? "Pain reliever and fever reducer" : index === 1 ? "Antibiotic" : "Anti-inflammatory",
        indications:
          index === 0
            ? "Used for mild to moderate pain relief and fever reduction"
            : index === 1
              ? "Treats bacterial infections"
              : "Reduces inflammation and pain",
        dosage: index === 0 ? "500mg every 6 hours" : index === 1 ? "250mg twice daily" : "200mg every 8 hours",
        warnings:
          index === 0
            ? "Avoid exceeding 4g per day. Can cause liver damage"
            : index === 1
              ? "Complete full course even if feeling better"
              : "Take with food to avoid stomach upset",
        side_effects:
          index === 0
            ? ["Nausea", "Liver damage", "Allergic reactions"]
            : index === 1
              ? ["Diarrhea", "Nausea", "Skin rash"]
              : ["Stomach upset", "Dizziness", "Headache"],
        interactions:
          index === 0
            ? ["Do not take with alcohol", "Avoid with blood thinners"]
            : index === 1
              ? ["Reduces effectiveness of birth control", "Avoid with antacids"]
              : ["Avoid with blood pressure medications"],
        risk_level: index === 0 ? "Low" : index === 1 ? "Medium" : "Low",
      }))

      setTimeout(() => {
        setMedicines(mockMedicines)
        setIsLoading(false)
      }, 1500)
    } else {
      setIsLoading(false)
    }
  }, [searchParams])

  const getRiskColor = (risk: string) => {
    switch (risk) {
      case "Low":
        return "bg-green-100 text-green-800 border-green-200"
      case "Medium":
        return "bg-yellow-100 text-yellow-800 border-yellow-200"
      case "High":
        return "bg-red-100 text-red-800 border-red-200"
      default:
        return "bg-gray-100 text-gray-800 border-gray-200"
    }
  }

  if (isLoading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-green-50 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-16 w-16 border-t-4 border-blue-600 mx-auto mb-4"></div>
          <h2 className="text-xl font-semibold text-gray-900">Loading Medicine Information...</h2>
          <p className="text-gray-600">Please wait while we fetch detailed data</p>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-green-50">
      {/* Navigation */}
      <nav className="bg-white/80 backdrop-blur-md border-b border-blue-100 sticky top-0 z-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            <Link href="/" className="flex items-center space-x-2">
              <ArrowLeft className="h-5 w-5 text-gray-600" />
              <span className="text-gray-600 hover:text-gray-900 transition-colors">Back to Home</span>
            </Link>
            <div className="flex items-center space-x-2">
              <div className="bg-gradient-to-r from-blue-600 to-green-600 p-2 rounded-lg">
                <Activity className="h-6 w-6 text-white" />
              </div>
              <span className="text-xl font-bold bg-gradient-to-r from-blue-600 to-green-600 bg-clip-text text-transparent">
                Medicine Dashboard
              </span>
            </div>
          </div>
        </div>
      </nav>

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div className="text-center mb-12">
          <h1 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">Medicine Analysis Results</h1>
          <p className="text-lg text-gray-600 max-w-2xl mx-auto">
            Detailed information about your prescribed medicines including dosage, warnings, and interactions.
          </p>
        </div>

        {medicines.length === 0 ? (
          <Card className="text-center py-12">
            <CardContent>
              <FileText className="h-16 w-16 text-gray-400 mx-auto mb-4" />
              <h3 className="text-xl font-semibold text-gray-900 mb-2">No Medicines Found</h3>
              <p className="text-gray-600 mb-6">Upload a prescription to see detailed medicine information.</p>
              <Link href="/upload">
                <Button className="bg-gradient-to-r from-blue-600 to-blue-700">Upload Prescription</Button>
              </Link>
            </CardContent>
          </Card>
        ) : (
          <div className="grid gap-8 md:grid-cols-2 lg:grid-cols-1">
            {medicines.map((medicine, index) => (
              <Card
                key={index}
                className="shadow-xl border-0 overflow-hidden hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-1"
              >
                <CardHeader className="bg-gradient-to-r from-blue-600 to-green-600 text-white">
                  <CardTitle className="flex items-center justify-between">
                    <div className="flex items-center space-x-3">
                      <Pill className="h-8 w-8" />
                      <span className="text-2xl font-bold">{medicine.name}</span>
                    </div>
                    <Badge className={`${getRiskColor(medicine.risk_level)} border font-semibold`}>
                      {medicine.risk_level} Risk
                    </Badge>
                  </CardTitle>
                </CardHeader>
                <CardContent className="p-8 space-y-6">
                  <div className="grid md:grid-cols-2 gap-6">
                    <div className="space-y-4">
                      <div className="flex items-start space-x-3">
                        <div className="bg-blue-100 p-2 rounded-lg">
                          <Info className="h-5 w-5 text-blue-600" />
                        </div>
                        <div>
                          <h4 className="font-semibold text-gray-900 mb-1">Purpose</h4>
                          <p className="text-gray-600">{medicine.purpose}</p>
                        </div>
                      </div>

                      <div className="flex items-start space-x-3">
                        <div className="bg-green-100 p-2 rounded-lg">
                          <FileText className="h-5 w-5 text-green-600" />
                        </div>
                        <div>
                          <h4 className="font-semibold text-gray-900 mb-1">Indications</h4>
                          <p className="text-gray-600">{medicine.indications}</p>
                        </div>
                      </div>

                      <div className="flex items-start space-x-3">
                        <div className="bg-purple-100 p-2 rounded-lg">
                          <Clock className="h-5 w-5 text-purple-600" />
                        </div>
                        <div>
                          <h4 className="font-semibold text-gray-900 mb-1">Dosage</h4>
                          <p className="text-gray-600 font-medium">{medicine.dosage}</p>
                        </div>
                      </div>
                    </div>

                    <div className="space-y-4">
                      <div className="flex items-start space-x-3">
                        <div className="bg-red-100 p-2 rounded-lg">
                          <AlertTriangle className="h-5 w-5 text-red-600" />
                        </div>
                        <div>
                          <h4 className="font-semibold text-gray-900 mb-1">Warnings</h4>
                          <p className="text-gray-600">{medicine.warnings}</p>
                        </div>
                      </div>

                      <div className="flex items-start space-x-3">
                        <div className="bg-orange-100 p-2 rounded-lg">
                          <Shield className="h-5 w-5 text-orange-600" />
                        </div>
                        <div>
                          <h4 className="font-semibold text-gray-900 mb-2">Interactions</h4>
                          <div className="space-y-1">
                            {medicine.interactions.map((interaction, idx) => (
                              <Badge key={idx} variant="outline" className="mr-2 mb-1">
                                {interaction}
                              </Badge>
                            ))}
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>

                  <div className="border-t pt-6">
                    <h4 className="font-semibold text-gray-900 mb-3 flex items-center">
                      <Activity className="h-5 w-5 mr-2 text-gray-600" />
                      Side Effects
                    </h4>
                    <div className="flex flex-wrap gap-2">
                      {medicine.side_effects.map((effect, idx) => (
                        <Badge key={idx} variant="secondary" className="bg-gray-100 text-gray-700">
                          {effect}
                        </Badge>
                      ))}
                    </div>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>
        )}

        {medicines.length > 0 && (
          <div className="mt-8 text-center">
            <Button
              onClick={generateAISummary}
              disabled={isGeneratingSummary}
              className="bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white px-8 py-3 rounded-xl shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300"
            >
              {isGeneratingSummary ? (
                <>
                  <div className="animate-spin rounded-full h-5 w-5 border-t-2 border-white mr-3"></div>
                  Generating AI Summary...
                </>
              ) : (
                <>
                  <Sparkles className="mr-3 h-5 w-5" />
                  AI Summary
                </>
              )}
            </Button>
          </div>
        )}

        {medicines.length > 0 && (
          <div className="mt-12 text-center">
            <Card className="bg-gradient-to-r from-blue-50 to-green-50 border-blue-200">
              <CardContent className="p-8">
                <h3 className="text-xl font-semibold text-gray-900 mb-4">Need More Information?</h3>
                <p className="text-gray-600 mb-6">
                  Always consult with your healthcare provider for personalized medical advice.
                </p>
                <div className="flex flex-col sm:flex-row gap-4 justify-center">
                  <Link href="/upload">
                    <Button variant="outline" className="border-blue-300 hover:bg-blue-50">
                      Upload Another Prescription
                    </Button>
                  </Link>
                  <Link href="/interactions">
                    <Button className="bg-gradient-to-r from-blue-600 to-green-600">View Drug Interactions</Button>
                  </Link>
                </div>
              </CardContent>
            </Card>
          </div>
        )}
      </div>

      {/* AI Summary Modal */}
      {showAISummary && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
          <div className="bg-white rounded-2xl max-w-4xl w-full max-h-[90vh] overflow-hidden shadow-2xl transform transition-all duration-300 scale-100">
            <div className="bg-gradient-to-r from-purple-600 to-pink-600 text-white p-6">
              <div className="flex items-center justify-between">
                <div className="flex items-center space-x-3">
                  <Sparkles className="h-8 w-8" />
                  <h2 className="text-2xl font-bold">AI Medical Summary</h2>
                </div>
                <button
                  onClick={() => setShowAISummary(false)}
                  className="text-white hover:text-gray-200 transition-colors p-2 hover:bg-white/20 rounded-full"
                >
                  <X className="h-6 w-6" />
                </button>
              </div>
            </div>

            <div className="p-8 overflow-y-auto max-h-[calc(90vh-120px)]">
              <div className="prose prose-lg max-w-none">
                <div className="bg-gradient-to-r from-purple-50 to-pink-50 border border-purple-200 rounded-xl p-6 mb-6">
                  <div className="flex items-center space-x-2 mb-4">
                    <div className="bg-purple-100 p-2 rounded-lg">
                      <Sparkles className="h-5 w-5 text-purple-600" />
                    </div>
                    <span className="font-semibold text-purple-900">AI-Powered Analysis</span>
                  </div>
                  <p className="text-purple-800 text-sm">
                    This summary has been generated using advanced AI to help you understand your prescription better.
                  </p>
                </div>

                <div className="whitespace-pre-line text-gray-700 leading-relaxed">{aiSummary}</div>

                <div className="mt-8 p-6 bg-yellow-50 border border-yellow-200 rounded-xl">
                  <div className="flex items-start space-x-3">
                    <AlertTriangle className="h-6 w-6 text-yellow-600 mt-1" />
                    <div>
                      <h4 className="font-semibold text-yellow-900 mb-2">Important Disclaimer</h4>
                      <p className="text-yellow-800 text-sm">
                        This AI-generated summary is for informational purposes only and should not replace professional
                        medical advice. Always consult with your healthcare provider for personalized medical guidance.
                      </p>
                    </div>
                  </div>
                </div>
              </div>

              <div className="flex justify-center mt-8 space-x-4">
                <Button onClick={() => setShowAISummary(false)} variant="outline" className="px-6 py-2">
                  Close
                </Button>
                <Button
                  onClick={() => window.print()}
                  className="bg-gradient-to-r from-purple-600 to-pink-600 px-6 py-2"
                >
                  Print Summary
                </Button>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  )
}
